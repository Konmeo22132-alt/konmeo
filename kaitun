repeat wait() until game:IsLoaded() and game.Players.LocalPlayer
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local playerGui = LocalPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HuneUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local Frame = Instance.new("Frame")
Frame.BackgroundColor3 = Color3.new(0.278, 0.278, 0.278)
Frame.BackgroundTransparency = 0.5
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.1, 0, 0.05, 0)
Frame.Size = UDim2.new(0, 799, 0, 95)
Frame.Parent = screenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 25)
UICorner.Parent = Frame

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.new(0.21, 1, 0.15)
UIStroke.Thickness = 5
UIStroke.Parent = Frame

local Title = Instance.new("TextLabel")
Title.Font = Enum.Font.SourceSansBold
Title.Text = "HuneIPA - BLOX FRUIT KAITUN SCRIPT"
Title.TextColor3 = Color3.new(0.05, 1, 0.05)
Title.TextSize = 30
Title.BackgroundTransparency = 1
Title.Position = UDim2.new(0.38, 0, -0.08, 0)
Title.Size = UDim2.new(0, 400, 0, 50)
Title.Name = "Title"
Title.Parent = Frame

local Status = Instance.new("TextLabel")
Status.Font = Enum.Font.SourceSansBold
Status.Text = "Idle"
Status.TextColor3 = Color3.new(0.05, 1, 0.05)
Status.TextSize = 50
Status.BackgroundTransparency = 1
Status.Position = UDim2.new(0.1, 0, 0.3, 0)
Status.Size = UDim2.new(0, 635, 0, 50)
Status.Name = "Status"
Status.Parent = Frame

local function SetStatus(txt, color)
    Status.Text = txt
    if color then
        Status.TextColor3 = color
    end
end

local function IsEntityAlive(entity)
    if not entity then return false end
    local humanoid = entity:FindFirstChild("Humanoid")
    return humanoid and humanoid.Health > 0
end

local function SafeHRP()
    return LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
end

local function SafeQuestVisible()
    local main = LocalPlayer.PlayerGui:FindFirstChild("Main")
    local quest = main and main:FindFirstChild("Quest")
    return quest and quest.Visible or false
end

function tweenToPosition(cf)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp or not cf then return false end
    local pos = cf.Position
    local dist = (hrp.Position - pos).Magnitude
    local speed = 350
    local time = dist / speed
    if time < 0.1 then time = 0.1 end
    local ti = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), {CFrame = CFrame.new(pos + Vector3.new(0, 3, 0))})
    local finished = false
    ti.Completed:Connect(function() finished = true end)
    ti:Play()
    local elapsed = 0
    local timeout = time + 1
    while not finished and elapsed < timeout do
        task.wait(0.1)
        elapsed = elapsed + 0.1
    end
    pcall(function() ti:Cancel() end)
    return (hrp.Position - pos).Magnitude
end

function BTP(cf)
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp or not cf then return end
    local dist = (hrp.Position - cf.Position).Magnitude
    if dist <= 500 then
        hrp.CFrame = cf
        return
    end
    if dist > 1000 then
        tweenToPosition(cf)
        task.wait(0.2)
        dist = (hrp.Position - cf.Position).Magnitude
        if dist <= 500 then
            hrp.CFrame = cf
            return
        end
    end
    while (hrp.Position - cf.Position).Magnitude > 600 do
        local dir = (cf.Position - hrp.Position).Unit
        local step = dir * 500
        hrp.CFrame = CFrame.new(hrp.Position + step)
        task.wait(0.05)
    end
    hrp.CFrame = cf
end

function AbandonQuest()
    pcall(function()
        local questGui = LocalPlayer.PlayerGui:FindFirstChild("Main")
        if questGui and questGui:FindFirstChild("Quest") and questGui.Quest.Visible then
            ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest")
            SetStatus("Konmeo22132", Color3.new(1, 0.2, 0.2))
            task.wait(0.3)
        end
    end)
end

local noclipConn
local function EnableNoClip()
    if noclipConn then return end
    noclipConn = RunService.Stepped:Connect(function()
        local ch = LocalPlayer.Character
        if not ch then return end
        for _,p in ipairs(ch:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = false end
        end
    end)
end
local function DisableNoClip()
    if noclipConn then noclipConn:Disconnect() noclipConn = nil end
end

local hoverConnection
local function CreateHoverBP()
    local hrp = SafeHRP()
    if not hrp then return nil end
    local bp = hrp:FindFirstChild("HuneHoverBP")
    if bp and bp:IsA("BodyPosition") then return bp end
    bp = Instance.new("BodyPosition")
    bp.Name = "HuneHoverBP"
    bp.MaxForce = Vector3.new(1e6,1e6,1e6)
    bp.P = 5e4
    bp.D = 1e3
    bp.Position = hrp.Position
    bp.Parent = hrp
    return bp
end

local function DestroyHoverBP()
    local hrp = SafeHRP()
    if not hrp then return end
    local bp = hrp:FindFirstChild("HuneHoverBP")
    if bp then pcall(function() bp:Destroy() end) end
    if hoverConnection then hoverConnection:Disconnect() hoverConnection = nil end
end

local currentTarget = nil
local hoverBP = nil
local function StartHoverOnTarget(target)
    if not target or not target.Parent or not target:FindFirstChild("HumanoidRootPart") then return end
    currentTarget = target
    hoverBP = CreateHoverBP()
    if not hoverBP then return end
    if hoverConnection then hoverConnection:Disconnect() hoverConnection = nil end
    hoverConnection = RunService.Heartbeat:Connect(function()
        local hrp = SafeHRP()
        if not hrp or not currentTarget or not currentTarget.Parent or not currentTarget:FindFirstChild("HumanoidRootPart") then
            return
        end
        local tpos = currentTarget.HumanoidRootPart.Position + Vector3.new(0,15,0)
        hoverBP.Position = tpos
        hrp.CFrame = CFrame.new(hoverBP.Position, currentTarget.HumanoidRootPart.Position)
    end)
end

local function StopHover()
    currentTarget = nil
    DestroyHoverBP()
end

local function HoverAbove(enemy)
    if not enemy or not enemy.Parent or not enemy:FindFirstChild("HumanoidRootPart") then return end
    StartHoverOnTarget(enemy)
end

local function GetEnemiesInRange(character, range)
    local enemies = Workspace.Enemies:GetChildren()
    local players = Players:GetPlayers()
    local targets = {}
    local playerPos = character:GetPivot().Position
    for _, enemy in ipairs(enemies) do
        local rootPart = enemy:FindFirstChild("HumanoidRootPart")
        if rootPart and IsEntityAlive(enemy) then
            local distance = (rootPart.Position - playerPos).Magnitude
            if distance <= range then
                table.insert(targets, enemy)
            end
        end
    end
    for _, otherPlayer in ipairs(players) do
        if otherPlayer ~= LocalPlayer and otherPlayer.Character then
            local rootPart = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
            if rootPart and IsEntityAlive(otherPlayer.Character) then
                local distance = (rootPart.Position - playerPos).Magnitude
                if distance <= range then
                    table.insert(targets, otherPlayer.Character)
                end
            end
        end
    end
    return targets
end

function AttackNoCoolDown(enemy)
    if not enemy or not IsEntityAlive(enemy) then return end
    local character = LocalPlayer.Character
    if not character then return end
    local equippedWeapon
    for _, item in ipairs(character:GetChildren()) do
        if item:IsA("Tool") then
            equippedWeapon = item
            break
        end
    end
    if not equippedWeapon then return end
    local rootPart = enemy:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end
    if equippedWeapon:FindFirstChild("LeftClickRemote") then
        local direction = (rootPart.Position - character:GetPivot().Position).Unit
        pcall(function()
            equippedWeapon.LeftClickRemote:FireServer(direction, 1)
        end)
    else
        local head = enemy:FindFirstChild("Head")
        if head then
            local storage = ReplicatedStorage
            local attackEvent = storage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE"):WaitForChild("RegisterAttack")
            local hitEvent = storage:WaitForChild("Modules"):WaitForChild("Net"):WaitForChild("RE"):WaitForChild("RegisterHit")
            pcall(function()
                attackEvent:FireServer(0.1)
                hitEvent:FireServer(rootPart, {{enemy, head}})
            end)
        end
    end
end

local fastAttackEnabled = true
spawn(function()
    while task.wait(0.05) do
        if fastAttackEnabled and currentTarget and IsEntityAlive(currentTarget) then
            pcall(function()
                AttackNoCoolDown(currentTarget)
            end)
        end
    end
end)

local worldMap = {
    [2753915549] = true,
    [4442272183] = true,
    [7449423635] = true
}
local placeId = game.PlaceId
local World1

if worldMap[placeId] then
    if placeId == 2753915549 then
        World1 = true
    end
end

function AutoStatMelee()
    return true
end

spawn(function()
    while wait() do
        if AutoStatMelee() then
            local v741 = { [1] = "AddPoint", [2] = "Melee", [3] = 3 }
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(v741))
            end)
        end
    end
end)

function JoinPirates()
    pcall(function()
        ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
    end)
end

local code = {
    "WildDares","BossBuild","GetPranked","Sub2OfficialNoobie","Sub2Daigrock",
    "Sub2NoobMaster123","Bluxxy","JCWK","Enyu_is_Pro","Sub2Fer999","kittgaming",
    "TheGreatAce","StrawHatMaine","TantaiGaming","Axiore","SUB2GAMERROBOT_EXP1",
    "MagicBus","StarcodeHEO","Sub2CaptainMaui","FIGHT4FRUIT","EARN_FRUITS"
}
function RedeemCode(Value)
    pcall(function()
        ReplicatedStorage.Remotes.Redeem:InvokeServer(Value)
    end)
end

local function NameStartsWith(entityName, base)
    if type(entityName) ~= "string" or type(base) ~= "string" then return false end
    local s = string.sub(entityName, 1, #base)
    return s == base
end

local function NearestEnemyByPrefix(prefix)
    local hrp = SafeHRP()
    if not hrp then return nil end
    local nearest, dist = nil, 1/0
    for _,e in ipairs(Workspace.Enemies:GetChildren()) do
        if IsEntityAlive(e) and NameStartsWith(e.Name, prefix) and e:FindFirstChild("HumanoidRootPart") then
            local d = (e.HumanoidRootPart.Position - hrp.Position).Magnitude
            if d < dist then nearest = e dist = d end
        end
    end
    return nearest
end

function FarmBandit()
    if not World1 then return end
    EnableNoClip()
    local MyLevel = LocalPlayer.Data.Level.Value
    local hrp = SafeHRP()
    local banditQuestCF = CFrame.new(1059.37195, 15.4495068, 1550.4231)

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    while MyLevel < 10 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            local hrp = SafeHRP()
            if hrp then
                local pos = fruit.Handle.Position
                local dist = (hrp.Position - pos).Magnitude
                local tweenInfo = TweenInfo.new(math.clamp(dist / 300, 0.5, 5), Enum.EasingStyle.Linear)
                local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos + Vector3.new(0,3,0))})
                tween:Play()
                tween.Completed:Wait()
            end
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin", "Buy")
        end)

        SetStatus("Farming Bandit", Color3.new(1,0,0))
        if not SafeQuestVisible() then
            local hrp = SafeHRP()
            if hrp then
                local distance = (hrp.Position - banditQuestCF.Position).Magnitude
                if distance > 1000 then
                    BTP(banditQuestCF)
                else
                    local tweenInfo = TweenInfo.new(distance / 250, Enum.EasingStyle.Linear)
                    local tween = TweenService:Create(hrp, tweenInfo, {CFrame = banditQuestCF})
                    tween:Play()
                    tween.Completed:Wait()
                end
            end
            task.wait(1)
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest","BanditQuest1",1)
            end)
            task.wait(1)
        else
            local target = NearestEnemyByPrefix("Bandit")
            if target then
                StartHoverOnTarget(target)
                repeat
                    if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                    task.wait(0.05)
                    MyLevel = LocalPlayer.Data.Level.Value
                until not IsEntityAlive(target) or MyLevel >= 10
                StopHover()
            else
                task.wait(0.2)
            end
        end
        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

function FarmGodGuard()
    if not World1 then return end
    local MyLevel = LocalPlayer.Data.Level.Value
    if MyLevel < 10 or MyLevel > 65 then return end
    EnableNoClip()
    local hrp = SafeHRP()
    local entrancePos = Vector3.new(-4697.29639, 845.31201, -1858.78748)

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    local function tweenToTarget(pos)
        local hrp = SafeHRP()
        if not hrp then return end
        local distance = (hrp.Position - pos).Magnitude
        if distance > 1000 then
            BTP(CFrame.new(pos))
        else
            local tweenInfo = TweenInfo.new(distance / 300, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
            tween:Play()
            tween.Completed:Wait()
        end
    end

    if hrp then
        tweenToTarget(entrancePos)
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance", entrancePos)
        end)
        task.wait(1)
    end

    while MyLevel >= 10 and MyLevel <= 65 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            tweenToTarget(fruit.Handle.Position + Vector3.new(0,3,0))
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin","Buy")
        end)

        SetStatus("Farming God's Guard", Color3.new(1, 0, 0))
        local target = NearestEnemyByPrefix("God's Guard")
        if target then
            StartHoverOnTarget(target)
            repeat
                if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                task.wait(0.05)
                MyLevel = LocalPlayer.Data.Level.Value
            until not IsEntityAlive(target) or MyLevel > 65
            StopHover()
        else
            task.wait(0.3)
        end
        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

function FarmDesert1()
    if not World1 then return end
    EnableNoClip()
    local MyLevel = LocalPlayer.Data.Level.Value

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    local function tweenToTarget(pos)
        local hrp = SafeHRP()
        if not hrp then return end
        local distance = (hrp.Position - pos).Magnitude
        if distance > 1000 then
            BTP(CFrame.new(pos))
        else
            local tweenInfo = TweenInfo.new(distance / 300, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
            tween:Play()
            tween.Completed:Wait()
        end
    end

    while MyLevel >= 66 and MyLevel <= 74 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            tweenToTarget(fruit.Handle.Position + Vector3.new(0,3,0))
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin","Buy")
        end)

        SetStatus("Farming Desert Bandit", Color3.new(1, 0.7, 0))

        local questGui = LocalPlayer.PlayerGui:FindFirstChild("Main")
        local questContainer = questGui and questGui:FindFirstChild("Quest") and questGui.Quest:FindFirstChild("Container")
        local questTitle = questContainer and questContainer:FindFirstChild("QuestTitle") and questContainer.QuestTitle:FindFirstChild("Title")
        if questTitle and questTitle.Text ~= "" and not string.find(questTitle.Text, "Desert") then
            AbandonQuest()
            task.wait(0.5)
        end

        if not SafeQuestVisible() then
            local chrp = SafeHRP()
            if chrp then
                tweenToTarget(Vector3.new(894.488647, 5.14000702, 4392.43359))
            end
            task.wait(1)
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", "DesertQuest", 1)
            end)
            task.wait(1)
        else
            local target = NearestEnemyByPrefix("Desert Bandit")
            if target then
                StartHoverOnTarget(target)
                repeat
                    if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                    task.wait(0.05)
                    MyLevel = LocalPlayer.Data.Level.Value
                until not IsEntityAlive(target) or MyLevel > 74
                StopHover()
            else
                tweenToTarget(Vector3.new(924.7998046875, 6.44867467880249, 4481.5859375))
                task.wait(0.5)
            end
        end

        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

function FarmDesert2()
    if not World1 then return end
    EnableNoClip()
    local MyLevel = LocalPlayer.Data.Level.Value

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    local function tweenToTarget(pos)
        local hrp = SafeHRP()
        if not hrp then return end
        local distance = (hrp.Position - pos).Magnitude
        if distance > 1000 then
            BTP(CFrame.new(pos))
        else
            local tweenInfo = TweenInfo.new(distance / 300, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
            tween:Play()
            tween.Completed:Wait()
        end
    end

    while MyLevel >= 75 and MyLevel <= 89 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            tweenToTarget(fruit.Handle.Position + Vector3.new(0,3,0))
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin","Buy")
        end)

        SetStatus("Farming Desert Officer", Color3.new(1, 0.8, 0))

        local questGui = LocalPlayer.PlayerGui:FindFirstChild("Main")
        local questContainer = questGui and questGui:FindFirstChild("Quest") and questGui.Quest:FindFirstChild("Container")
        local questTitle = questContainer and questContainer:FindFirstChild("QuestTitle") and questContainer.QuestTitle:FindFirstChild("Title")
        if questTitle and questTitle.Text ~= "" and not string.find(questTitle.Text, "Desert") then
            AbandonQuest()
            task.wait(0.5)
        end

        if not SafeQuestVisible() then
            local chrp = SafeHRP()
            if chrp then
                tweenToTarget(Vector3.new(894.488647, 5.14000702, 4392.43359))
            end
            task.wait(1)
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", "DesertQuest", 2)
            end)
            task.wait(1)
        else
            local target = NearestEnemyByPrefix("Desert Officer")
            if target then
                StartHoverOnTarget(target)
                repeat
                    if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                    task.wait(0.05)
                    MyLevel = LocalPlayer.Data.Level.Value
                until not IsEntityAlive(target) or MyLevel > 89
                StopHover()
            else
                tweenToTarget(Vector3.new(1608.2822265625, 8.614224433898926, 4371.00732421875))
                task.wait(0.5)
            end
        end

        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

function FarmSnow1()
    if not World1 then return end
    EnableNoClip()
    local MyLevel = LocalPlayer.Data.Level.Value

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    local function tweenToTarget(pos)
        local hrp = SafeHRP()
        if not hrp then return end
        local distance = (hrp.Position - pos).Magnitude
        if distance > 1000 then
            BTP(CFrame.new(pos))
        else
            local tweenInfo = TweenInfo.new(distance / 300, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
            tween:Play()
            tween.Completed:Wait()
        end
    end

    while MyLevel >= 90 and MyLevel <= 99 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            tweenToTarget(fruit.Handle.Position + Vector3.new(0,3,0))
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin","Buy")
        end)

        SetStatus("Farming Snow Bandit", Color3.new(0.8, 0.9, 1))

        local questGui = LocalPlayer.PlayerGui:FindFirstChild("Main")
        local questContainer = questGui and questGui:FindFirstChild("Quest") and questGui.Quest:FindFirstChild("Container")
        local questTitle = questContainer and questContainer:FindFirstChild("QuestTitle") and questContainer.QuestTitle:FindFirstChild("Title")
        if questTitle and questTitle.Text ~= "" and not string.find(questTitle.Text, "Snow") then
            AbandonQuest()
            task.wait(0.5)
        end

        if not SafeQuestVisible() then
            local chrp = SafeHRP()
            if chrp then
                tweenToTarget(Vector3.new(1389.74451, 88.1519318, -1298.90796))
            end
            task.wait(1)
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", "SnowQuest", 1)
            end)
            task.wait(1)
        else
            local target = NearestEnemyByPrefix("Snow Bandit")
            if target then
                StartHoverOnTarget(target)
                repeat
                    if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                    task.wait(0.05)
                    MyLevel = LocalPlayer.Data.Level.Value
                until not IsEntityAlive(target) or MyLevel > 99
                StopHover()
            else
                tweenToTarget(Vector3.new(1354.347900390625, 87.27277374267578, -1393.946533203125))
                task.wait(0.5)
            end
        end
        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

function FarmSnow2()
    if not World1 then return end
    EnableNoClip()
    local MyLevel = LocalPlayer.Data.Level.Value

    spawn(function()
        while task.wait(0.1) do
            pcall(function()
                local player = game.Players.LocalPlayer
                local character = player.Character
                local backpack = player.Backpack
                local fruits = {
                    {"Rocket Fruit","Rocket-Rocket"},{"Spin Fruit","Spin-Spin"},{"Blade Fruit","Blade-Blade"},
                    {"Spring Fruit","Spring-Spring"},{"Bomb Fruit","Bomb-Bomb"},{"Smoke Fruit","Smoke-Smoke"},
                    {"Spike Fruit","Spike-Spike"},{"Flame Fruit","Flame-Flame"},{"Falcon Fruit","Falcon-Falcon"},
                    {"Ice Fruit","Ice-Ice"},{"Sand Fruit","Sand-Sand"},{"Dark Fruit","Dark-Dark"},
                    {"Diamond Fruit","Diamond-Diamond"},{"Light Fruit","Light-Light"},{"Rubber Fruit","Rubber-Rubber"},
                    {"Creation Fruit","Creation-Creation"},{"Ghost Fruit","Ghost-Ghost"},{"Magma Fruit","Magma-Magma"},
                    {"Quake Fruit","Quake-Quake"},{"Buddha Fruit","Buddha-Buddha"},{"Love Fruit","Love-Love"},
                    {"Spider Fruit","Spider-Spider"},{"Sound Fruit","Sound-Sound"},{"Phoenix Fruit","Phoenix-Phoenix"},
                    {"Portal Fruit","Portal-Portal"},{"Lighting Fruit","Lighting-Lighting"},{"Pain Fruit","Pain-Pain"},
                    {"Blizzard Fruit","Blizzard-Blizzard"},{"Gravity Fruit","Gravity-Gravity"},{"Mammoth Fruit","Mammoth-Mammoth"},
                    {"T-Rex Fruit","T-Rex-T-Rex"},{"Dough Fruit","Dough-Dough"},{"Shadow Fruit","Shadow-Shadow"},
                    {"Venom Fruit","Venom-Venom"},{"Gas Fruit","Gas-Gas"},{"Control Fruit","Control-Control"},
                    {"Spirit Fruit","Spirit-Spirit"},{"Leopard Fruit","Leopard-Leopard"},{"Yeti Fruit","Yeti-Yeti"},
                    {"Kitsune Fruit","Kitsune-Kitsune"},{"Dragon Fruit","Dragon (West)-Dragon (West)"},
                    {"Dragon Fruit","Dragon (East)-Dragon (East)"}
                }
                for _, fruit in ipairs(fruits) do
                    local fruitName, serverName = fruit[1], fruit[2]
                    if character:FindFirstChild(fruitName) or backpack:FindFirstChild(fruitName) then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("StoreFruit", serverName, backpack:FindFirstChild(fruitName))
                    end
                end
            end)
        end
    end)

    local function tweenToTarget(pos)
        local hrp = SafeHRP()
        if not hrp then return end
        local distance = (hrp.Position - pos).Magnitude
        if distance > 1000 then
            BTP(CFrame.new(pos))
        else
            local tweenInfo = TweenInfo.new(distance / 300, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
            tween:Play()
            tween.Completed:Wait()
        end
    end

    while MyLevel >= 100 and MyLevel <= 119 do
        local fruit = getNearestFruit and getNearestFruit()
        if fruit and fruit:FindFirstChild("Handle") then
            SetStatus("Collecting Fruit...", Color3.new(0,1,1))
            tweenToTarget(fruit.Handle.Position + Vector3.new(0,3,0))
        end

        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin","Buy")
        end)

        SetStatus("Farming Snowman", Color3.new(0.8, 0.9, 1))

        local questGui = LocalPlayer.PlayerGui:FindFirstChild("Main")
        local questContainer = questGui and questGui:FindFirstChild("Quest") and questGui.Quest:FindFirstChild("Container")
        local questTitle = questContainer and questContainer:FindFirstChild("QuestTitle") and questContainer.QuestTitle:FindFirstChild("Title")
        if questTitle and questTitle.Text ~= "" and not string.find(questTitle.Text, "Snow") then
            AbandonQuest()
            task.wait(0.5)
        end

        if not SafeQuestVisible() then
            local chrp = SafeHRP()
            if chrp then
                tweenToTarget(Vector3.new(1389.74451, 88.1519318, -1298.90796))
            end
            task.wait(1)
            pcall(function()
                ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest", "SnowQuest", 2)
            end)
            task.wait(1)
        else
            local target = NearestEnemyByPrefix("Snowman")
            if target then
                StartHoverOnTarget(target)
                repeat
                    if not IsEntityAlive(target) or not target:FindFirstChild("HumanoidRootPart") then break end
                    task.wait(0.05)
                    MyLevel = LocalPlayer.Data.Level.Value
                until not IsEntityAlive(target) or MyLevel > 119
                StopHover()
            else
                tweenToTarget(Vector3.new(1201.6412353515625, 144.57958984375, -1550.0670166015625))
                task.wait(0.5)
            end
        end
        MyLevel = LocalPlayer.Data.Level.Value
        task.wait(0.1)
    end
    DisableNoClip()
end

getgenv().AUTOHAKI = true
spawn(function()
    local canUseHaki = true
    local debounceTime = 2
    while task.wait(0.1) do
        if getgenv().AUTOHAKI then
            if not (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HasBuso")) and canUseHaki then
                canUseHaki = false
                local args = { [1] = "Buso" }
                pcall(function()
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end)
                wait(debounceTime)
                canUseHaki = true
            end
        end
    end
end)

local isRedeeming = true
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(0.5)

    if getgenv().AUTOHAKI then
        pcall(function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
        end)
    end

    if not isRedeeming then
        local lv = LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data.Level.Value or 1

        if lv < 10 then
            spawn(FarmBandit)
        elseif lv >= 10 and lv <= 65 then
            spawn(FarmGodGuard)
        elseif lv >= 66 and lv <= 74 then
            spawn(FarmDesert1)
        elseif lv >= 75 and lv <= 89 then
            spawn(FarmDesert2)
        elseif lv >= 90 and lv <= 99 then
            spawn(FarmSnow1)
        elseif lv >= 100 and lv <= 119 then
            spawn(FarmSnow2)
        end
    end
end)


function JoinPirates()
    pcall(function()
        ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam", "Pirates")
    end)
end

spawn(function()
    JoinPirates()
    task.wait(0.5)
    for i,v in pairs(code) do
        SetStatus("Redeem Code...", Color3.new(0,1,1))
        RedeemCode(v)
        wait(0.15)
    end
    isRedeeming = false
    SetStatus("Idle", Color3.new(0.05,1,0.05))
    task.wait(0.5)
    FarmBandit()
    task.wait(3)
    FarmGodGuard()
    task.wait(3)
    FarmDesert1()
    task.wait(3)
    FarmDesert2()
    task.wait(3)
    FarmSnow1()
    task.wait(3)
    FarmSnow2()
    SetStatus("Idle", Color3.new(0.05,1,0.05))
end)
