(() => {
    const originalNow = Date.now;
    const start = originalNow();

    Date.now = () => start + (originalNow() - start) * 1000;

    const originalSetTimeout = window.setTimeout;
    window.setTimeout = (cb, delay, ...args) => originalSetTimeout(cb, delay / 5 + Math.random() * 50, ...args);

    const originalSetInterval = window.setInterval;
    window.setInterval = (cb, delay, ...args) => originalSetInterval(cb, delay / 5 + Math.random() * 50, ...args);

    console.log(
        "%cüéâ Bypass yeumoney by Konmeo Hub üéâ \n%cDiscord: @konmeo22132 | discord.gg/huneipa \nYouTube: https://youtube.com/@huneee205",
        "color: white; font-size: 16px; font-weight: bold;",
        "color: orange; font-size: 13px; font-weight: bold;"
    );

    const delay = ms => new Promise(res => setTimeout(res, ms));
    let foundCode = false;

    async function waitForElement(selector, timeout = 10000) {
        const startTime = Date.now();
        while (Date.now() - startTime < timeout) {
            const el = document.querySelector(selector);
            if (el) return el;
            await delay(500);
        }
        return null;
    }

    async function autoRun() {
        const scrollStep = 100;
        const scrollDelay = 1000;

        console.log("%c[Konmeo Hub] üö® ƒêang k√©o xu·ªëng, vui l√≤ng kh√¥ng can thi·ªáp ƒë·ªÉ tr√°nh l·ªói", "color: red; font-weight: bold;");

        while (window.scrollY + window.innerHeight < document.body.scrollHeight - 10) {
            window.scrollBy(0, scrollStep);
            await delay(scrollDelay + Math.random() * 100);
        }

        console.log("%c[Konmeo Hub] ‚úÖ ƒê√£ k√©o xu·ªëng cu·ªëi trang", "color: limegreen; font-weight: bold;");
        await delay(1000);

        const layMaBtn = await waitForElement("#layma_me_vuatraffic");

        if (layMaBtn) {
            layMaBtn.click();
            console.log("%c[Konmeo Hub] ‚úÖ ƒê√£ click n√∫t 'L·∫§Y M√É'", "color: #00ff00; font-weight: bold;");
        } else {
            console.log("%c[Konmeo Hub] ‚ùå Kh√¥ng t√¨m th·∫•y n√∫t 'L·∫§Y M√É'", "color: red;");
            return;
        }

        await delay(15000);

        const findAndClick = async () => {
            if (foundCode) return;

            const clickBtn = document.querySelector("#layma_me_vuatraffic.getcodebtn.cursor-pointer");
            if (clickBtn && clickBtn.textContent.includes("VUI L√íNG CLICK")) {
                console.log("%c[Konmeo Hub] üîç Ph√°t hi·ªán y√™u c·∫ßu click. ƒê·ª£i 5s...", "color: yellow;");
                await delay(5000);

                const validLinks = Array.from(document.querySelectorAll("a[href]")).filter(link => {
                    const href = link.getAttribute("href");
                    const rect = link.getBoundingClientRect();
                    return href && !href.includes("#") && rect.width > 0 && rect.height > 0;
                });

                if (validLinks.length > 0) {
                    validLinks[0].click();
                    console.log("%c[Konmeo Hub] üîó ƒê√£ click v√†o link: " + validLinks[0].href, "color: cyan;");
                } else {
                    console.log("%c[Konmeo Hub] ‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y link h·ª£p l·ªá.", "color: orange;");
                }
            } else {
                console.log("%c[Konmeo Hub] ‚åö Kh√¥ng th·∫•y n√∫t 'VUI L√íNG CLICK', th·ª≠ l·∫°i sau 5s", "color: lightblue;");
                setTimeout(findAndClick, 5000);
            }
        };

        setInterval(() => {
            if (foundCode) return;

            const all = document.querySelectorAll("#layma_me_vuatraffic");
            all.forEach(span => {
                const txt = span.textContent.trim();
                if (/^\d{6}$/.test(txt)) {
                    console.log(`%c[Konmeo Hub] ‚ùó T√¨m th·∫•y m√£ : ${txt}`, "color: #ff69b4; font-weight: bold; font-size: 14px");
                    foundCode = true;
                }
            });
        }, 5000);

        findAndClick();
    }

    autoRun();
